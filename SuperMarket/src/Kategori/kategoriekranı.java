package Kategori;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author pc
 */
import anaEkran.AdminPaneli;
import anaEkran.giriş;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

public class kategoriekranı extends javax.swing.JFrame {

    /**
     * Creates new form kategori
     */
    
    DefaultTableModel model;
    kategoriİşlemler islemler =  new kategoriİşlemler ();
    public kategoriekranı() {
        initComponents();
        model = (DefaultTableModel) KategoriTablo.getModel();
        kategoriGoruntule();
    }
    public void dinamikAra(String ara){
        
        TableRowSorter<DefaultTableModel> tr = new TableRowSorter<DefaultTableModel>(model);
        
        
        KategoriTablo.setRowSorter(tr);
        
        
        tr.setRowFilter(RowFilter.regexFilter(ara));
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        KategoriÇeşit = new javax.swing.JTextField();
        Ekle = new javax.swing.JButton();
        Düzenle = new javax.swing.JButton();
        Sil = new javax.swing.JButton();
        Kategoriİsim = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        KategoriTablo = new javax.swing.JTable();
        Temizle = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        arama_cubugu = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        gerituşu = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        jPanel1.setBackground(new java.awt.Color(255, 102, 0));
        jPanel1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        jLabel1.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 102, 0));
        jLabel1.setText("KATEGORİ LİSTESİ");

        jLabel3.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 102, 0));
        jLabel3.setText("KATEGORİ ÇEŞİT");

        jLabel4.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 102, 0));
        jLabel4.setText("KATEGORİ İSİM");

        KategoriÇeşit.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        KategoriÇeşit.setForeground(new java.awt.Color(255, 102, 0));

        Ekle.setBackground(new java.awt.Color(255, 102, 0));
        Ekle.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        Ekle.setForeground(new java.awt.Color(255, 255, 255));
        Ekle.setText("Ekle");
        Ekle.setBorder(null);
        Ekle.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Ekle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EkleActionPerformed(evt);
            }
        });

        Düzenle.setBackground(new java.awt.Color(255, 102, 0));
        Düzenle.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        Düzenle.setForeground(new java.awt.Color(255, 255, 255));
        Düzenle.setText("Düzenle");
        Düzenle.setBorder(null);
        Düzenle.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Düzenle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DüzenleActionPerformed(evt);
            }
        });

        Sil.setBackground(new java.awt.Color(255, 102, 0));
        Sil.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        Sil.setForeground(new java.awt.Color(255, 255, 255));
        Sil.setText("Sil");
        Sil.setBorder(null);
        Sil.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Sil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SilActionPerformed(evt);
            }
        });

        Kategoriİsim.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        Kategoriİsim.setForeground(new java.awt.Color(255, 102, 0));

        KategoriTablo.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        KategoriTablo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "İsim", "Çeşit"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        KategoriTablo.setIntercellSpacing(new java.awt.Dimension(0, 0));
        KategoriTablo.setRowHeight(25);
        KategoriTablo.setSelectionBackground(new java.awt.Color(255, 102, 0));
        KategoriTablo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                KategoriTabloMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(KategoriTablo);
        if (KategoriTablo.getColumnModel().getColumnCount() > 0) {
            KategoriTablo.getColumnModel().getColumn(0).setResizable(false);
            KategoriTablo.getColumnModel().getColumn(1).setResizable(false);
            KategoriTablo.getColumnModel().getColumn(2).setResizable(false);
        }

        Temizle.setBackground(new java.awt.Color(255, 102, 0));
        Temizle.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        Temizle.setForeground(new java.awt.Color(255, 255, 255));
        Temizle.setText("Temizle");
        Temizle.setBorder(null);
        Temizle.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Temizle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TemizleActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Century Gothic", 1, 20)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 102, 0));
        jLabel7.setText("KATEGORİ YÖNETİMİ");

        arama_cubugu.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                arama_cubuguKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(156, 156, 156)
                        .addComponent(Ekle, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(300, 300, 300)
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(KategoriÇeşit, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(74, 74, 74)
                                .addComponent(Düzenle, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(62, 62, 62)
                                .addComponent(Sil, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(83, 83, 83)
                                .addComponent(Temizle, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(54, 54, 54)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Kategoriİsim, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(349, 349, 349)
                        .addComponent(jLabel7))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(76, 76, 76)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 731, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(65, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(365, 365, 365)
                        .addComponent(jLabel1))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(162, 162, 162)
                        .addComponent(arama_cubugu, javax.swing.GroupLayout.PREFERRED_SIZE, 566, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(KategoriÇeşit, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(Kategoriİsim, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(129, 129, 129)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Ekle, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Düzenle, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Sil, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Temizle, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 44, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(arama_cubugu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15))
        );

        jLabel9.setFont(new java.awt.Font("Arial Black", 1, 24)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("x");
        jLabel9.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel9MouseClicked(evt);
            }
        });

        gerituşu.setIcon(new javax.swing.ImageIcon("C:\\Users\\pc\\Downloads\\forward-arrow - Kopya.png")); // NOI18N
        gerituşu.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        gerituşu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                gerituşuMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(gerituşu)
                .addGap(864, 864, 864)
                .addComponent(jLabel9)
                .addContainerGap(49, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(gerituşu)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(24, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void KategoriTabloMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_KategoriTabloMouseClicked
        // TODO add your handling code here:
        int selectedrow =KategoriTablo.getSelectedRow();
        
        Kategoriİsim.setText(model.getValueAt(selectedrow,1).toString());
        KategoriÇeşit.setText(model.getValueAt(selectedrow,2).toString());
        
    }//GEN-LAST:event_KategoriTabloMouseClicked

    private void EkleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EkleActionPerformed
        // TODO add your handling code here:
         if((Kategoriİsim.getText().isEmpty())||(KategoriÇeşit.getText().isEmpty())){
            
            JOptionPane.showMessageDialog(this,"Kayıt İşlemi Başarısız...");
        
        }else{
        String ad  = Kategoriİsim.getText();
        String çeşit = KategoriÇeşit.getText();
        

        islemler.kategoriEkle(ad,çeşit);

        kategoriGoruntule();

        JOptionPane.showMessageDialog(this,"Yeni Kategori Başarıyla Eklendi...");
         }
    }//GEN-LAST:event_EkleActionPerformed

    private void DüzenleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DüzenleActionPerformed
        // TODO add your handling code here:
        String ad  =  Kategoriİsim.getText();
        String çeşit = KategoriÇeşit.getText();
        
        

        int selectedrow = KategoriTablo.getSelectedRow();

        if (selectedrow == -1) {

            if (model.getRowCount() == 0) {
                JOptionPane.showMessageDialog(this,"Satıcı Tablosu şu anda boş. ");
            }
            else {
                JOptionPane.showMessageDialog(this,"Lütfen güncellenecek bir satıcı seçin.");
            }
        }
        else {

            int id = (int)model.getValueAt(selectedrow,0);
            
            islemler.kategoriGuncelle(id,ad,çeşit);

            kategoriGoruntule();

            JOptionPane.showMessageDialog(this,"Satıcı başarıyla güncellendi...");
        }
    
    }//GEN-LAST:event_DüzenleActionPerformed

    private void SilActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SilActionPerformed
        // TODO add your handling code here:
        int selectedrow = KategoriTablo.getSelectedRow();

        if (selectedrow == -1) {
            if (model.getRowCount() == 0 ) {
                JOptionPane.showMessageDialog(this,"Kategori tablosu şu anda boş...");
            }
            else {
                JOptionPane.showMessageDialog(this,"Lütfen silinecek bir kategori seçin...");
            }

        }
        else {
            int id = (int)model.getValueAt(selectedrow,0);

            islemler.kategoriSil(id);

            kategoriGoruntule();

            JOptionPane.showMessageDialog(this,"Kategori başarıyla silindi...");

        }
    
    }//GEN-LAST:event_SilActionPerformed

    private void TemizleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TemizleActionPerformed
        // TODO add your handling code here:
        Kategoriİsim.setText("");
        KategoriÇeşit.setText("");
    }//GEN-LAST:event_TemizleActionPerformed

    private void arama_cubuguKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_arama_cubuguKeyReleased
        String ara = arama_cubugu.getText();

        dinamikAra(ara);
    }//GEN-LAST:event_arama_cubuguKeyReleased

    private void jLabel9MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel9MouseClicked
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_jLabel9MouseClicked

    private void gerituşuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_gerituşuMouseClicked
        // TODO add your handling code here:
        new giriş().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_gerituşuMouseClicked

    /**
     * @param args the command line arguments
     */
     public void kategoriGoruntule() {
        
        model.setRowCount(0);
        
        ArrayList<kategoribilgi> kategori = new ArrayList<kategoribilgi>();
        
        
        kategori = islemler.calisanlariGetir();
        
        if (kategori != null ) {
            
            for (kategoribilgi calisan : kategori) {
                Object[] eklenecek = {calisan.getId(),calisan.getIsim(),calisan.getÇeşit(),};
                
                model.addRow(eklenecek);
                
                
                
            }
            
        }
    }
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(kategoriekranı.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(kategoriekranı.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(kategoriekranı.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(kategoriekranı.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new kategoriekranı().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Düzenle;
    private javax.swing.JButton Ekle;
    private javax.swing.JTable KategoriTablo;
    private javax.swing.JTextField KategoriÇeşit;
    private javax.swing.JTextField Kategoriİsim;
    private javax.swing.JButton Sil;
    private javax.swing.JButton Temizle;
    private javax.swing.JTextField arama_cubugu;
    private javax.swing.JLabel gerituşu;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
